version: '3'
services:
    postgres:
        image: postgres:14
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
        volumes:
            - ./database/:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD", "pg_isready -d db -U airflow"]
            interval: 5s
            retries: 5
        ports:
          - "5433:5432"
        restart: always

    scheduler:
        build: .
        command: poetry run airflow scheduler
        restart: on-failure
        depends_on:
            - postgres
        environment:
            - AIRFLOW__CORE__EXECUTOR=LocalExecutor
            - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:$POSTGRES_PASSWORD@postgres:5432/db
            - AIRFLOW__CORE__LOAD_EXAMPLES=false
            # par EO pour dbt+airflow (2 lines)
            - GBQ_PROJECT_ID=dataengvelibforecast
            - DBT_KEYFILE_PATH=/app/airflow/dbt_velib/velib.json
            - airbyte_client_id=${airbyte_client_id}
            - airbyte_client_secret=${airbyte_client_secret}
            - airbyte_connection_id=${airbyte_connection_id}

        volumes:
            - ./dags:/app/airflow/dags
            - ./data:/app/airflow/data
            - ./logs:/app/airflow/logs
            - ./data_fetch:/app/airflow/data_fetch
            # par EO pour dbt+airflow (1 lines)
            - ./dbt_velib:/app/airflow/dbt_velib

    webserver:
        build: .
        command: poetry run scripts/entrypoint.sh
        restart: on-failure
        depends_on:
            - postgres
            - scheduler
        environment:
            - AIRFLOW__CORE__EXECUTOR=LocalExecutor
            - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:$POSTGRES_PASSWORD@postgres:5432/db
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
        volumes:
            - ./dags:/app/airflow/dags
            - ./data:/app/airflow/data
            - ./logs:/app/airflow/logs
            - ./data/fetch:/app/airflow/data/fetch
        ports:
            - "8080:8080"
        healthcheck:
            test: ["CMD-SHELL", "[ -f /home/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3
